<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="&quot;normal&quot; close, likely to fail" enabled="true">
        <stringProp name="TestPlan.comments">this often fails, because the reponse to &quot;send message to echo&quot; is received before the close</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1497981856000</longProp>
        <longProp name="ThreadGroup.end_time">1497981856000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler" testname="ws echo" enabled="true">
          <boolProp name="createNewConnection">true</boolProp>
          <stringProp name="TestPlan.comments">a normal echo, nothing fancy</stringProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">echo.websocket.org</stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path">/</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">hello world</stringProp>
        </io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ws send message to echo" enabled="true">
          <stringProp name="TestPlan.comments">just send a message to echo, but don&apos;t wait for the response (in order to confuse the close sampler that&apos;s next)</stringProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac elementum tortor, quis dictum erat. Nulla sit amet condimentum augue, et fringilla nisl. Donec euismod mi et facilisis facilisis. Curabitur id massa arcu. Nunc facilisis scelerisque ex, quis hendrerit justo fringilla vel. Ut id dapibus augue, sit amet pretium augue. Sed at porttitor turpis, lobortis tempor dolor. Nam eu ligula in ipsum porttitor dictum. Donec sollicitudin ipsum in nisi sollicitudin faucibus. In bibendum ante elit, at dignissim est posuere in. Aliquam scelerisque odio diam, id feugiat tortor tincidunt ac. Aliquam lectus dui, eleifend vel augue a, fermentum egestas urna.
</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
        </io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.CloseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.CloseWebSocketSampler" testname="ws close, likely to fail!" enabled="true">
          <stringProp name="TestPlan.comments">likely to fail, because the server will probably send the echo&apos;d response before it will process the close</stringProp>
        </io.github.kamalyes.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="&quot;smart&quot; close" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1497981856000</longProp>
        <longProp name="ThreadGroup.end_time">1497981856000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">will not fail when non-close message is received before the close response</stringProp>
      </ThreadGroup>
      <hashTree>
        <io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler" testname="ws echo" enabled="true">
          <boolProp name="createNewConnection">true</boolProp>
          <stringProp name="TestPlan.comments">a normal echo, nothing fancy</stringProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">echo.websocket.org</stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path">/</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">hello world</stringProp>
        </io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ws send message to echo" enabled="true">
          <stringProp name="TestPlan.comments">just send a message to echo, but don&apos;t wait for the response (in order to confuse the close sampler that&apos;s next)</stringProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac elementum tortor, quis dictum erat. Nulla sit amet condimentum augue, et fringilla nisl. Donec euismod mi et facilisis facilisis. Curabitur id massa arcu. Nunc facilisis scelerisque ex, quis hendrerit justo fringilla vel. Ut id dapibus augue, sit amet pretium augue. Sed at porttitor turpis, lobortis tempor dolor. Nam eu ligula in ipsum porttitor dictum. Donec sollicitudin ipsum in nisi sollicitudin faucibus. In bibendum ante elit, at dignissim est posuere in. Aliquam scelerisque odio diam, id feugiat tortor tincidunt ac. Aliquam lectus dui, eleifend vel augue a, fermentum egestas urna.
</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
        </io.github.kamalyes.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="close with filter" enabled="true"/>
        <hashTree>
          <io.github.kamalyes.jmeter.wssampler.TextFrameFilter guiclass="io.github.kamalyes.jmeter.wssampler.TextFrameFilterGui" testclass="io.github.kamalyes.jmeter.wssampler.TextFrameFilter" testname="ws Text Frame Filter" enabled="true">
            <stringProp name="comparisonType">IsPlain</stringProp>
            <stringProp name="TestPlan.comments">filters (i.e. discards) all ws text frames that are received by sampler in its scope</stringProp>
            <stringProp name="matchValue"></stringProp>
          </io.github.kamalyes.jmeter.wssampler.TextFrameFilter>
          <hashTree/>
          <io.github.kamalyes.jmeter.wssampler.CloseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.CloseWebSocketSampler" testname="ws close (filtered frames will show up as sub-result)" enabled="true"/>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
