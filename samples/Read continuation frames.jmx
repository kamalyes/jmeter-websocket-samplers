<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Read fragmented frame with if-condition" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1509260715000</longProp>
        <longProp name="ThreadGroup.end_time">1509260715000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">nowhere.com</stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="path">/fragmented_message</stringProp>
        </io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler" testname="read first frame" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="optional">false</boolProp>
        </io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">! ${websocket.last_frame_final}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler" testname="read second frame" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <boolProp name="binaryPayload">false</boolProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="optional">false</boolProp>
          </io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Read fragmented frame with while-loop" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1509260715000</longProp>
        <longProp name="ThreadGroup.end_time">1509260715000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">nowhere.com</stringProp>
          <stringProp name="port"></stringProp>
          <stringProp name="path">/fragmented_message</stringProp>
        </io.github.kamalyes.jmeter.wssampler.OpenWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler" testname="read first frame" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="optional">false</boolProp>
        </io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While last frame is not final" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(! ${websocket.last_frame_final},)}</stringProp>
        </WhileController>
        <hashTree>
          <io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler" testname="read next frame" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server"></stringProp>
            <stringProp name="port">80</stringProp>
            <stringProp name="path"></stringProp>
            <boolProp name="binaryPayload">false</boolProp>
            <boolProp name="createNewConnection">false</boolProp>
            <boolProp name="optional">false</boolProp>
          </io.github.kamalyes.jmeter.wssampler.SingleReadWebSocketSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
