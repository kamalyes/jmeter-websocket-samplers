<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="bin_data" elementType="Argument">
            <stringProp name="Argument.name">bin_data</stringProp>
            <stringProp name="Argument.value">0xca 0xfe 0xba 0xbe</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="invalid_bin_data" elementType="Argument">
            <stringProp name="Argument.name">invalid_bin_data</stringProp>
            <stringProp name="Argument.value">0xfg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1475685764000</longProp>
        <longProp name="ThreadGroup.end_time">1475685764000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler" testname="WebSocket request-response Sampler" enabled="true">
          <boolProp name="createNewConnection">true</boolProp>
          <stringProp name="server">echo.websocket.org</stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path">/</stringProp>
          <boolProp name="binaryPayload">true</boolProp>
          <stringProp name="requestData">0xca 0xfe 0xba 0xbe</stringProp>
        </io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree>
          <io.github.kamalyes.jmeter.assertions.BinaryContentAssertion guiclass="io.github.kamalyes.jmeter.assertions.BinaryContentAssertionGUI" testclass="io.github.kamalyes.jmeter.assertions.BinaryContentAssertion" testname="Binary Response Assertion" enabled="true">
            <stringProp name="compareValue">0xca 0xfe</stringProp>
          </io.github.kamalyes.jmeter.assertions.BinaryContentAssertion>
          <hashTree/>
        </hashTree>
        <io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler" testname="2nd WebSocket request-response Sampler" enabled="true">
          <boolProp name="createNewConnection">true</boolProp>
          <stringProp name="server">echo.websocket.org</stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path">/</stringProp>
          <boolProp name="binaryPayload">true</boolProp>
          <stringProp name="requestData">${bin_data}</stringProp>
        </io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler" testname="3rd WebSocket request-response Sampler" enabled="true">
          <boolProp name="createNewConnection">true</boolProp>
          <stringProp name="server">echo.websocket.org</stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path">/</stringProp>
          <boolProp name="binaryPayload">true</boolProp>
          <stringProp name="requestData">${invalid_bin_data}</stringProp>
        </io.github.kamalyes.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="true">
          <stringProp name="FileSaver.filename">websocket_sampler_binary_response_data</stringProp>
          <boolProp name="FileSaver.errorsonly">false</boolProp>
          <boolProp name="FileSaver.skipautonumber">false</boolProp>
          <boolProp name="FileSaver.skipsuffix">false</boolProp>
          <boolProp name="FileSaver.successonly">false</boolProp>
          <stringProp name="TestPlan.comments">save response so you can inspect the binary responses</stringProp>
        </ResultSaver>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
